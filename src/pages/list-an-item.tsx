import { type NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useForm } from "react-hook-form";
import { api } from "~/utils/api";
// import Link from "next/link";

type ListItemForm = {
  name: string;
  description: string;
  price: string;
};

const ListAnItem: NextPage = () => {
  const createListing = api.listings.create.useMutation();
  const router = useRouter();

  const { register, handleSubmit } = useForm<ListItemForm>();
  const onSubmit = (formData: ListItemForm) => {
    createListing
      .mutateAsync({
        ...formData,
        price: parseFloat(formData.price),
      })
      .then(() => {
        router.push("/");
      });
  };

  return (
    <>
      <Head>
        <title>List an Item</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-slate-800">
        <div className="container flex w-full flex-col items-center justify-center gap-5 p-2">
          <h1 className="text-2xl font-bold">List an Item</h1>
          <form
            className="flex w-full flex-col gap-4 p-2 md:w-1/2"
            onSubmit={handleSubmit(onSubmit)}
          >
            <div className="w-full">
              <label
                htmlFor="name"
                className="text-md mb-2 block font-medium text-gray-900 dark:text-white"
              >
                Item Name
              </label>
              <input
                id="name"
                className="text-md block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                {...register("name", { required: true })}
              />
            </div>

            <div>
              <label
                htmlFor="description"
                className="text-md mb-2 block font-medium text-gray-900 dark:text-white"
              >
                Description
              </label>
              <textarea
                id="description"
                className="text-md block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                {...register("description", { required: true })}
              />
            </div>

            <div>
              <label
                htmlFor="price"
                className="text-md mb-2 block font-medium text-gray-900 dark:text-white"
              >
                Price
              </label>
              <input
                id="price"
                type="number"
                step="0.01"
                className="text-md block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                {...register("price", { required: true })}
              />
            </div>

            <button
              type="submit"
              className="text-md rounded-lg bg-blue-700 px-5 py-2.5 font-medium text-white hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
            >
              Create
            </button>
          </form>
        </div>
      </main>
    </>
  );
};

export default ListAnItem;
